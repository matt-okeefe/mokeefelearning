With months AS (
  SELECT
  '2017-01-01' AS first_day,
  '2017-01-31' AS last_day
  UNION
  SELECT
    '2017-02-01' AS first_day,
  '2017-02-28' AS last_day
  UNION
  SELECT
    '2017-03-01' AS first_day,
  '2017-03-31' AS last_day
),
Cross_join as
(SELECT subscriptions.*, months.* FROM subscriptions
CROSS JOIN months),
status as 
(SELECT ID, segment, first_day as Month, 
CASE
  WHEN (subscription_start < first_day) 
    AND (
      subscription_end >= first_day
      OR subscription_end IS NULL)
      AND Segment = 30
      THEN 1
      ELSE 0
      END As IS_ACTIVE_30,
CASE
  WHEN (subscription_start < first_day) 
    AND (
      subscription_end >= first_day
      OR subscription_end IS NULL)
      AND Segment = 87
      THEN 1
      ELSE 0
      END As IS_ACTIVE_87,
CASE
  WHEN (subscription_start < first_day)
  AND (subscription_end Between First_day AND last_day)
      AND Segment = 30
      THEN 1
      ELSE 0
      END As IS_cancelled_30,
CASE
  WHEN (subscription_start < first_day)
  AND (subscription_end Between First_day AND last_day)
      AND Segment = 87
      THEN 1
      ELSE 0
      END As IS_cancelled_87
FROM cross_join),
Status_aggregate AS 
(SELECT month, SUM(is_active_87) AS Is_active_87, SUM(is_cancelled_87) AS is_cancelled_87,SUM(is_active_30) AS is_active_30, SUM(is_cancelled_30) AS is_cancelled_30
FROM status
GROUP BY month)
SELECT month, 1.0* is_cancelled_87/is_active_87 AS Churn_87,
1.00* is_cancelled_30/is_active_30 AS churn_30
FROM status_aggregate
Group by month 
