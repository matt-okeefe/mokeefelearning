With months AS (
  SELECT
  '2017-01-01' AS first_day,
  '2017-01-31' AS last_day
  UNION
  SELECT
    '2017-02-01' AS first_day,
  '2017-02-28' AS last_day
  UNION
  SELECT
    '2017-03-01' AS first_day,
  '2017-03-31' AS last_day
),
Cross_join as
(SELECT subscriptions.*, months.* FROM subscriptions
CROSS JOIN months),
status as 
(SELECT ID, segment, first_day as Month, 
CASE
  WHEN (subscription_start < first_day) 
    AND (
      subscription_end >= first_day
      OR subscription_end IS NULL)
      THEN 1
      ELSE 0
      END As IS_ACTIVE,
CASE
  WHEN (subscription_start < first_day)
  AND (subscription_end Between First_day AND last_day)
      THEN 1
      ELSE 0
      END As IS_cancelled
FROM cross_join),
Status_aggregate AS 
(SELECT month, segment, SUM(is_active) AS Is_active, SUM(is_cancelled) AS is_cancelled
FROM status
GROUP BY month, segment)
SELECT month, segment, round(1.0* is_cancelled/is_active,2) AS Churn
FROM status_aggregate
ORDER BY 2,1;
